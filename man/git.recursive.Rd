% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/github_recursive.R
\name{git.recursive}
\alias{git.recursive}
\title{Recursively extract the symbolic links to all github resources}
\usage{
git.recursive(x, filter_pat = NULL)
}
\arguments{
\item{x}{The combo of username/repo or full folder path to a github repository.}

\item{filter_pat}{A pattern to filter the returned data frame for subsetting}
}
\value{
\format{
 A data frame with 7 observations on the following 5 variables.
 \describe{
   \item{\strong{file_name}}{\emph{character}The basename of the file.}
   \item{\strong{file_link}}{\emph{character}Full path to the file.}
   \item{\strong{file_type}}{\emph{character}File extension or file-type.}
   \item{\strong{folder}}{\emph{character} The directory path-folder that contains
     the file.}
   \item{\strong{raw}}{\emph{character}A full path to the raw github file,
     which can be downloaded as if it were a cdn.}
  }
}
}
\description{
\code{git.recursive}
}
\details{
This function takes a either a combination of a username/repo, or a
 full path to a rop folder and recurively retreives the file information.
}
\examples{

had_xml2 <- git.recursive('hadley/xml2')
dim(had_xml2)

# get the first R file from the Ropensci Magick repo
git.recursive('ropensci/magick', filter_pat = "\\\\.R$") \%>\%
 slice(1) \%>\% .$raw


}

